) %>%
layout(title = 'Class Stadning Count in Info 498F')
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=FALSE),]
plot_ly(summary_table,
x = Class_Standing,
y = Count,
name = "Class standing",
type = "bar",
color = Class_Standing
) %>%
layout(title = 'Class Stadning Count in Info 498F')
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=TRUE),]
plot_ly(summary_table,
x = Class_Standing,
y = Count,
name = "Class standing",
type = "bar",
color = Class_Standing
) %>%
layout(title = 'Class Stadning Count in Info 498F')
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=TRUE),]
data1 <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
library(plotly)
library(dplyr)
summary_table <- data1 %>%
group_by(What.is.your.current.class.standing.) %>%
rename(Class_Standing = What.is.your.current.class.standing.) %>%
summarise(
Count = n()
)
summary_table$Class_Standing <-
factor(summary_table$Class_Standing,
levels=c('Freshman','Sophomore','Junior', 'Senior'))
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=TRUE),]
plot_ly(summary_table,
x = Class_Standing,
y = Count,
name = "Class standing",
type = "bar",
color = Class_Standing
) %>%
layout(title = 'Class Stadning Count in Info 498F')
View(summary_table)
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=FALSE),]
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=FALSE),]
plot_ly(summary_table,
x = Class_Standing,
y = Count,
name = "Class standing",
type = "bar",
color = Class_Standing
) %>%
layout(title = 'Class Stadning Count in Info 498F')
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=FALSE),]
plot_ly(summary_table,
x = Class_Standing,
y = Count,
name = "Class standing",
type = "bar",
color = Class_Standing
) %>%
layout(title = 'Class Stadning Count in Info 498F')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
color = Class_Standing,
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
remove(summary_table)
summary_table <- data1 %>%
group_by(What.is.your.current.class.standing.) %>%
rename(Class_Standing = What.is.your.current.class.standing.) %>%
summarise(
Count = n()
)
View(summary_table)
summary_table$Class_Standing <-
summary_table$Class_Standing %>%
factor(levels=c('Freshman','Sophomore','Junior', 'Senior'))
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=FALSE),]
plot_ly(summary_table,
x = Class_Standing,
y = Count,
color = Class_Standing,
type = "bar"
)
plot_ly(summary_table,
x = Class_Standing,
y = Count
)
plot_ly(summary_table,
x = Class_Standing,
y = Count,
color = Class_Standing
)
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=TRUE),]
plot_ly(summary_table,
x = Class_Standing,
y = Count
)
plot_ly(summary_table,
x = Class_Standing,
y = Count,
color = Class_Standing
)
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color="rgb(16, 32, 77)" ),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
hoverinfo = ('x'),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
hover =paste(Count, 'Students'),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
name =paste(Count, 'Students'),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
color = Class_Standing,
type = "3Dbar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
color = 'Red',
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=FALSE),]
plot_ly(summary_table,
x = Class_Standing,
y = Count,
color = 'Red',
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
color = 'Green',
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
library(RColorBrewer)
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Paired")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set 1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F', xaxis = 'Class Standing')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F', xlab = 'Class Standing')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
hoverinfo = 'all',
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F', xlab = 'Class Standing')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F', xaxis(title = 'Class Standing'))
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F', xaxistitle = 'Class Standing'))
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F', xaxistitle = 'Class Standing')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F', x = 'Class Standing')
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F', xaxis = list('Class Standing'))
plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F', xaxis = list(title = 'Class Standing'))
chart_1 <- function(data){
summary_table <- data %>%
group_by(What.is.your.current.class.standing.) %>%
rename(Class_Standing = What.is.your.current.class.standing.) %>%
summarise(
Count = n()
)
summary_table$Class_Standing <-
summary_table$Class_Standing %>%
factor(levels=c('Freshman','Sophomore','Junior', 'Senior'))
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=FALSE),]
p <- plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F',
xaxis = list(title = 'Class Standing'))
ret(p)
}
View(chart_1)
chart_1 <- function(data){
library(RColorBrewer)
summary_table <- data %>%
group_by(What.is.your.current.class.standing.) %>%
rename(Class_Standing = What.is.your.current.class.standing.) %>%
summarise(
Count = n()
)
summary_table$Class_Standing <-
summary_table$Class_Standing %>%
factor(levels=c('Freshman','Sophomore','Junior', 'Senior'))
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=FALSE),]
p <- plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F',
xaxis = list(title = 'Class Standing'))
ret(p)
}
chart_1 <- function(data){
library(RColorBrewer)
summary_table <- data %>%
group_by(What.is.your.current.class.standing.) %>%
rename(Class_Standing = What.is.your.current.class.standing.) %>%
summarise(
Count = n()
)
summary_table$Class_Standing <-
summary_table$Class_Standing %>%
factor(levels=c('Freshman','Sophomore','Junior', 'Senior'))
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=FALSE),]
p <- plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F',
xaxis = list(title = 'Class Standing'))
ret(p)
}
chart_1("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
data <- read.csv('https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv')
chart_1(data)
# library(plotly)
# library(dplyr)
chart_1 <- function(data){
library(RColorBrewer)
summary_table <- data %>%
group_by(What.is.your.current.class.standing.) %>%
rename(Class_Standing = What.is.your.current.class.standing.) %>%
summarise(
Count = n()
)
summary_table$Class_Standing <-
summary_table$Class_Standing %>%
factor(levels=c('Freshman','Sophomore','Junior', 'Senior'))
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=FALSE),]
p <- plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F',
xaxis = list(title = 'Class Standing'))
ret(p)
}
chart_1(data)
chart_1 <- function(data){
library(RColorBrewer)
summary_table <- data %>%
group_by(What.is.your.current.class.standing.) %>%
rename(Class_Standing = What.is.your.current.class.standing.) %>%
summarise(
Count = n()
)
summary_table$Class_Standing <-
summary_table$Class_Standing %>%
factor(levels=c('Freshman','Sophomore','Junior', 'Senior'))
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=FALSE),]
p <- plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F',
xaxis = list(title = 'Class Standing'))
return(p)
}
chart_1(data)
# This function takes in a dataset about a class and returns a barplot
chart_1 <- function(data){
# Used to add color scheme to barchart
library(RColorBrewer)
# Create a summary table grouped by class standing and has count of number of
# students in each class
summary_table <- data %>%
group_by(What.is.your.current.class.standing.) %>%
rename(Class_Standing = What.is.your.current.class.standing.) %>%
summarise(
Count = n()
)
# Add factor with levels to class standing column to allow sorting by class
summary_table$Class_Standing <-
summary_table$Class_Standing %>%
factor(levels=c('Freshman','Sophomore','Junior', 'Senior'))
# Sort the table by class standing instead of alphabetically
summary_table = summary_table[order(summary_table$Class_Standing,decreasing=FALSE),]
# Make a barchart with the Class Standing on the x-axis and the count of
# students in each class on the y-axis
p <- plot_ly(summary_table,
x = Class_Standing,
y = Count,
marker = list(color = brewer.pal(4, "Set1")),
type = "bar"
) %>%
layout(title = 'Class Stadning Count in Info 498F',
xaxis = list(title = 'Class Standing'))
return(p)
}
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
scales::show_col(RColorBrewer::brewer.pal("Set1"))
scales::show_col(RColorBrewer::brewer.pal("Set1"))
shiny::runApp('lab-8')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
library(RColorBrewer)
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
irisData <- data.frame(iris)
View(irisData)
irisData <- data.frame(iris) %>%
rename(
Sepal.Length = 'Sepal Length',
Sepal.Width = 'Sepal Width',
Petal.Length = 'Petal Length',
Petal.Width = 'Petal.Width'
)
irisData <- data.frame(iris) %>%
rename(
Sepal.Length = Sepal Length,
Sepal.Width = Sepal Width,
Petal.Length = Petal Length,
Petal.Width = Petal Width
)
irisData <- data.frame(iris) %>%
rename(
Sepal.Length = paste('Sepal Length')
)
names(irisData) <- sub(".", " ", names(irisData))
irisData <- data.frame(iris)
names(irisData) <- sub(" ", ".", names(irisData))
names(irisData) <- sub(".L", " L", names(irisData))
names(irisData) <- sub(".L", " ", names(irisData))
names(irisData) <- sub(".", " ", names(irisData))
names(irisData) <- sub("l.", "l ", names(irisData))
irisData <- data.frame(iris)
names(irisData) <- sub("l.", "l ", names(irisData))
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
irisData <- data.frame(iris)
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('lab-8')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
shiny::runApp('Assingments/a8-building-applications')
source('/scripts/create_plot.R')
setwd("~/Documents/Info 498F/Assingments/a8-building-applications")
source('/scripts/create_plot.R')
source('~/scripts/create_plot.R')
source('/scripts/create_plot.R')
source('scripts/create_plot.R')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
